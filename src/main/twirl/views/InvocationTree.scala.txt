@import zugen.core.document.MethodInvocationDiagramDocument.Invocation
@import play.twirl.api.TwirlFeatureImports.defining

@(invocations: Seq[Invocation])
digraph "Method Invocation Diagram" {
  graph [
    rankdir = LR
    charset = "UTF-8"
    bgcolor = "#343434"
    fontcolor = "#eeeeee"
    style = "filled"
  ]

  node [
    colorscheme = rdylgn11
    shape = box
    fontname="Arial"
    color = "#555555"
    fontsize = 10
    fontcolor = "#eeeeee"
    margin = 0.15
    style = "rounded"
  ]
  edge [
    arrowhead=vee
    tailport=e
    headport=w
    style = solid
    color = "#555555"
    penwidth = 0.5
    arrowsize = 0.5
  ]

  @for(invocation <- invocations.reverse) {
    @invocation.from.itemId -> @invocation.to.itemId
  }

  @defining(invocations.flatMap(i => Seq(i.from, i.to)).toSet) { items =>
    @for(item <- items) {
        @item.itemId [
          label = <<font align="left" point-size="8">@item.pkg</font><br align="left" />@item.templateDefinitionName#@item.methodName>
        ]
      }

    @defining(items.filter(_.isTopLevel)) { topLevelItems =>
      { rank = same;
      @for(item <- topLevelItems) {
        @item.itemId;
      }
      }
    }
  }
}
