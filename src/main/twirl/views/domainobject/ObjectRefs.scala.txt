@import zugen.core.document.DomainRelationDiagramDocument.Digraph
@import zugen.core.document.DomainRelationDiagramDocument._

@(digraph: Digraph)
digraph domain_relation_diagram {
  graph [
    charset = "UTF-8",
    bgcolor = "#343434",
    fontcolor = "#eeeeee",
    style = "filled",
    layout = dot
  ];

  node [
    colorscheme = rdylgn11,
    fontname = "sans-serif",
    color = 7,
    fontsize = 10,
    fontcolor = 6,
    fillcolor = 11,
    margin = 0.05,
    style = "solid,filled"
  ];

  edge [
    style = solid,
    fontsize = 8,
    color = "#eeeeee",
    fontname = "sans-serif",
    fontcolor = "#dddddd",
    labelfloat = false,
  ];

  @for(subGraph <- digraph.subGraphs) {
    subgraph cluster_@{subGraph.id} {
      label = "  @subGraph.label  ";
      style = "";
      color = "#555555";
      fontname = "sans-serif";
      fontsize = 8;
      margin = 10;
      pad = 10;

      @for(node <- subGraph.nodes) {
        @node.id [label = "@node.label"]
      }
    }
  }

  @for(edge <- digraph.edges) {
    @edge match {
      case DomainInternalInheritanceEdge(from, to) => { @from -> @to [arrowhead = normal ] }
      case DomainExternalInheritanceEdge(from, to) => { @from -> @to [arrowhead = normal, color = "#880000" ] }
      case DomainInternalPropertyEdge(from, propertyLabel, toLabel) => { @from -> "@toLabel" [ arrowhead = odiamond, label = @propertyLabel ] }
      case DomainExternalPropertyEdge(from, propertyLabel, toLabel) => { @from -> "@toLabel" [ arrowhead = odiamond, label = @propertyLabel, color = "#880000" ] }
    }
  }
}
